###############################################################################
# NAME:		    howitworks.txt
#
# AUTHOR:	    Ethan D. Twardy
#
# DESCRIPTION:	    Just like the title.
#
# CREATED:	    10/05/2017
#
# LAST EDITED:	    12/27/2017
###

1. Most of the program will be controlled using command line switches. These
    switches will determine things such as: The entry point (name of main) if
    applicable, language (The program will support finite languages), directory
    to search within (if applicable), optional name of translation unit
    containing entry point, limit of recursion (height of the tree), etc.

2. If the file containing the main is not specified, begin searching the
    directory for the main function.

3. For each translation unit, complete the following procedure:
    * Do not keep track of function declarations.
    * If the function is a definition, create an entry in the hash table with
	the name of the function as the key. Record arguments, return type, and
	any specifiers, name of translation unit, and create two linked lists,
	which will keep track of functions that reference this function, and
	unresolved dependencies.
    * Iterate through the function definition and record any function call. If
	main has not been discovered, and the function has not yet been added
	to the hash, create an entry in the hash with all members NULL except
	the unresolved dependencies container, which will contain an entry with
	the name of the calling function. If main has not been discovered and
	the function already exists in the hash, add an entry in the unresolved
	dependencies container with the name of the calling function.

###############################################################################
