;; NAME: insert-banner.el
;; AUTHOR: Ethan D. Twardy
;; DESCRIPTION: Contains functions for inserting banners conforming to specific coding standards

;;; Function definitions
(defun insert-file-banner (name)
  "Insert a banner at the top of a file"
  (interactive "sFilename: \n")
  (setq nl nil)
  (setq sym nil)
  (setq stt nil)
  (setq date (shell-command-to-string "date +%m/%d/%Y"))

  (when (eq major-mode 'c-mode)
    (setq nl " *")
    (setq sym "*")
    (setq stt "/")
    )

  (when (or (eq major-mode 'sh-mode)
	    (eq major-mode 'perl-mode)
	    (eq major-mode 'makefile-bsdmake-mode))
    (setq nl "#")
    (setq sym "#")
    )
  
  (when (not (null stt)) (insert stt))
  (setq iter 79)
  (if (null stt)
      (setq iter 80)
    )
  (let (val)
    (dotimes (num iter val)
	(insert sym)
	))
  (insert "\n" nl)
  (insert " NAME:	    " name "\n")
  (insert nl "\n" nl)
  (insert " AUTHOR:	    Ethan D. Twardy\n")
  (insert nl "\n" nl)
  (insert " DESCRIPTION:	    \n")
  (insert nl "\n" nl)
  (insert " CREATED:	    " date)
  (insert nl "\n" nl)
  (insert " LAST EDITED:	    " date)
  (insert nl sym sym)
  (when (not (null stt)) (insert stt))
  )

(defun insert-function-header (name)
  "Insert a header at the top of a function"
  (interactive "sFunction-Name: \n")
  (setq nl nil)
  (setq sym nil)
  (setq stt nil)
  
  (when (eq major-mode 'c-mode)
    (setq nl "\n *")
    (setq sym "*")
    (setq stt "/")
    )

  (when (or (eq major-mode 'sh-mode)
	    (eq major-mode 'perl-mode)
	    (eq major-mode 'makefile-bsdmake-mode))
    (setq nl "\n\#")
    (setq sym "\#")
    )

  (when (not (null stt)) (insert stt))
  (setq iter 79)
  (if (null stt)
      (setq iter 80)
    )
  (let (val)
    (dotimes (num iter val)
      (insert sym)
      )
    )
  (insert nl)
  (insert " FUNCTION:	    " name nl nl)
  (insert " DESCRIPTION:	    " nl nl)
  (insert " ARGUMENTS:	    " nl nl)
  (insert " RETURN:	    " nl nl)
  (insert " NOTES:	    ")
  (insert nl sym sym)
  (when (not (null stt)) (insert stt))
)
  
(defun insert-section-header (name)
  "Insert a section header"
  (interactive "sSection-Name: \n")
  (setq nl nil)
  (setq sym nil)
  (setq stt nil)

  (when (eq major-mode 'c-mode)
    (setq nl " *")
    (setq sym "*")
    (setq stt "/")
    )

  (when (or (eq major-mode 'sh-mode)
	    (eq major-mode 'perl-mode)
	    (eq major-mode 'makefile-bsdmake-mode))
    (setq nl "\#")
    (setq sym "\#")
    )

  (when (not (null stt)) (insert stt))
  (setq iter 79)
  (if (null stt)
      (setq iter 80)
    )

  (let (val)
    (dotimes (num iter val)
      (insert sym)
      )
    )

  (insert "\n" nl " " name "\n")
  (insert nl sym sym)
  (when (not (null stt)) (insert stt))
  )
